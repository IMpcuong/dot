filetype plugin on

syntax on
syntax enable

colorscheme jellybeans

set nu
set ruler
set encoding=utf-8 fileencoding=utf-8
set background=dark
set splitbelow

set noerrorbells novisualbell
set tabstop=2 softtabstop=2
set shiftwidth=2
set expandtab
set smartindent
set autoindent
set autoread
set nowrap
set smartcase
set showmatch
set noswapfile
set nobackup
set incsearch
set ff=unix
set mouse=a
" set path+=**
" set wildmenu

hi QuickFixLine cterm=NONE term=reverse ctermbg=black ctermfg=white guibg=Cyan

" Remaps key-binding from <esc> to <C-c>.
inoremap <C-c> <esc>
vnoremap <C-c> <esc>
cnoremap <C-c> <esc>

" Remaps key-binding to move tab effortlessly.
" Windows:
" noremap <A-Left>  :-tabmove<cr>
" noremap <A-Right> :+tabmove<cr>
" MacOS:
noremap <M-Left>  :-tabmove<cr>
noremap <M-Right> :+tabmove<cr>

" Yanks to register `+` (on VISUAL mode) -> can be used in global clipboard.
vnoremap <C-y> "+y<cr>

autocmd BufWritePre * :%s/\s\+$//e

" :PlugInstall
call plug#begin()
" Plug 'girishji/vimcomplete'
Plug 'junegunn/fzf.vim'
Plug 'preservim/nerdtree'
Plug 'neoclide/coc.nvim', {'branch': 'release'}
call plug#end()

" :CocInstall coc-clangd coc-go coc-git
function! CheckBackspace() abort
  let col = col('.') - 1
  return !col || getline('.')[col - 1]  =~# '\s'
endfunction

" Using <TAB> as the default completion trigger instead of <C-n>.
inoremap <silent><expr> <TAB>
      \ coc#pum#visible() ? coc#pum#next(1) :
      \ CheckBackspace() ? "\<Tab>" :
      \ coc#refresh()
inoremap <expr><S-TAB> coc#pum#visible() ? coc#pum#prev(1) : "\<C-h>"
inoremap <silent><expr> <CR> coc#pum#visible() ? coc#pum#confirm(): "\<C-g>u\<CR>\<c-r>=coc#on_enter()\<CR>"
inoremap <silent><expr> <c-@> coc#refresh())

" nmap <silent> gd <Plug>(coc-definition)
" nmap <silent> gD <Plug>(coc-implementation)
" nmap <silent> gr <Plug>(coc-references)

nnoremap <C-f> :NERDTreeFind<CR>
